{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Inver",
				"InverseTransformPoint(Vector3 position)\tVector3"
			],
			[
				"draw",
				"drawMovesHelper\tGameObject"
			],
			[
				"GetCompon",
				"GetComponentInChildren<T>()\tT"
			],
			[
				"my",
				"myTileMap\tTileMap"
			],
			[
				"Equals",
				"Equals(Tile other)\tbool"
			],
			[
				"other",
				"otherType\tTileType"
			],
			[
				"to",
				"ToList()\tList<TSource>"
			],
			[
				"cont",
				"controller\tPlayerController"
			],
			[
				"Tile",
				"TileMap\tTileMap"
			],
			[
				"tile",
				"TileMapObj\tGameObject"
			],
			[
				"Vec",
				"Vector3\tVector3"
			],
			[
				"new",
				"newCoords\tTileCoords"
			],
			[
				"T",
				"TileCoords\tTileCoords"
			],
			[
				"D",
				"Dictionary<\tDictionary<"
			],
			[
				"Vect",
				"Vector3\tVector3"
			],
			[
				"num",
				"numVertices\tint"
			],
			[
				"shard",
				"sharedMesh\tMesh { get; set; }"
			],
			[
				"mesh",
				"mesh_collider\tMeshCollider"
			],
			[
				"Get",
				"GetComponent<T>()\tT"
			],
			[
				"Mesh",
				"MeshFilter\tMeshFilter"
			],
			[
				"v",
				"vsize_z\tint"
			],
			[
				"visz",
				"vsize_z\tint"
			],
			[
				"vis",
				"vsize_z\tint"
			],
			[
				"tri",
				"triOffset\tint"
			],
			[
				"size",
				"size_z\tint"
			],
			[
				"ve",
				"Vector3\tVector3"
			],
			[
				"vsi",
				"vsize_x\tint"
			],
			[
				"Vector",
				"Vector3()\tVector3()"
			],
			[
				"vsize",
				"vsize_z\tint"
			],
			[
				"Lin",
				"LinkedList<T>()\tLinkedList()"
			],
			[
				"Pro",
				"PrototypeFall2016"
			]
		]
	},
	"buffers":
	[
		{
			"file": "Assets/PlayerController.cs",
			"settings":
			{
				"buffer_size": 19512,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing System.Linq;\n\npublic class PriorityQueue : LinkedList<Tile>, ICollection<Tile>\n{\n    public PriorityQueue() : base() { }\n    public PriorityQueue(IEnumerable<Tile> val) : base(val) { }\n\n    public LinkedListNode<Tile> AddToQueue(Tile node, Dictionary<Tile, float> fScore){\n        if (this.Contains(node)) {\n            return null;\n        }\n        LinkedListNode<Tile> current = this.First;\n        //if this queue has no values yet\n        if (current == null) {\n            return this.AddFirst(node);\n        }\n        //LinkedListNode<Vector3> next = current.Next;\n        float newNodeFScore = fScore[node];\n        while (current != null) {\n            if (newNodeFScore < fScore[current.Value]) {\n                return this.AddBefore(current, node);\n            }\n            current = current.Next;\n        }\n        return this.AddLast(node);\n    }\n\n}\n",
			"file": "Assets/PriorityQueue.cs",
			"file_size": 1005,
			"file_write_time": 131204418889471699,
			"settings":
			{
				"buffer_size": 950,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "using System.Collections;\r\nusing System.Collections.Generic;\r\nusing UnityEngine;\r\nusing UnityEngine.UI;\r\nusing System.Linq;\r\nusing System;\r\n\r\n\r\npublic abstract class Tile : IEquatable<Tile>\r\n{\r\n    //enum my tile type\r\n    //maybe enums should go into the same file?\r\n    public enum TileType {Sand, Rock, Grass, Water, Obstacle, Floor};\r\n    protected TileType myType;\r\n    protected TileCoords myCoords;\r\n    protected bool traversable = true;\r\n\r\n    protected Tile(TileCoords coords, TileType type) {\r\n        myType = type;\r\n        myCoords = coords;\r\n    }\r\n\r\n    /*public Tile(TileCoords coords){\r\n        myCoords = coords;\r\n    }*/\r\n\r\n    public virtual TileCoords getCoords(){\r\n        return myCoords;\r\n    }\r\n\r\n    public virtual Tile.TileType getType(){\r\n        return myType;\r\n    }\r\n\r\n    public virtual bool isTraversable() {\r\n        return traversable;\r\n    }\r\n\r\n    public virtual Tile coordsToVector3(){\r\n        return new Tile(myCoords.x, 0, myCoords.z);\r\n    }\r\n\r\n    public bool Equals(Tile other){\r\n        if(other == null){\r\n            return false;\r\n        }\r\n        Tile.TileType otherType = other.getType();\r\n        TileCoords otherCoords = other.getCoords();\r\n        return myCoords.x == otherCoords.x && myCoords.z == otherCoords.z && myType == otherType;\r\n    }\r\n\r\n    public override bool Equals(System.Object obj){\r\n        if(obj == null) {\r\n            return false;\r\n        }\r\n        Tile tileObj = obj as Tile;\r\n        if(tileObj == null){\r\n            return false;\r\n        } else {\r\n            return Equals(tileObj);\r\n        }\r\n    }\r\n\r\n    public override int GetHashCode(){\n        result = 31 * result + myCoords.z;\n        return result;\r\n    }\r\n\r\n\r\n    //my center coords\r\n    //my movement cost\r\n    //IF you can save neighbors, that means that you must generate tile map in script beforehand\r\n    //my neighbors - left right forward backwards\r\n}\r\n",
			"file": "Assets/Tile.cs",
			"file_size": 1953,
			"file_write_time": 131222653395370952,
			"settings":
			{
				"buffer_size": 1908,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Assets/Obstacle.cs",
			"settings":
			{
				"buffer_size": 335,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "Assets/FloorTile.cs",
			"settings":
			{
				"buffer_size": 303,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "Assets/TileCoords.cs",
			"settings":
			{
				"buffer_size": 688,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Windows"
			}
		},
		{
			"file": "Assets/SandTile.cs",
			"settings":
			{
				"buffer_size": 230,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Windows"
			}
		},
		{
			"file": "Assets/TileMap.cs",
			"settings":
			{
				"buffer_size": 3541,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "package",
		"selected_items":
		[
			[
				"package",
				"Package Control: Install Package"
			],
			[
				"packla",
				"Package Control: Install Package"
			],
			[
				"PAckage",
				"Package Control: Install Package"
			]
		],
		"width": 432.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/F/Documents/PrototypeFall2016/Assets"
	],
	"file_history":
	[
		"/C/Users/Tobias/Downloads/tilemap_1/TileMap Tutorial #1/Assets/TileMapMouse.cs",
		"/C/Users/Tobias/Downloads/tilemap_1/TileMap Tutorial #1/Assets/TileMouseOver.cs",
		"/C/Users/Tobias/Downloads/tilemap_1/TileMap Tutorial #1/Assets/TileMap.cs",
		"/F/Documents/PrototypeFall2016/Assets/SceneChanger.cs",
		"/F/Documents/PrototypeFall2016/gamecraft_fall_2016.sublime-project",
		"/F/Documents/PrototypeFall2016/Assets/Turn.cs",
		"/F/Documents/PrototypeFall2016/Assets/PlayerController.cs",
		"/C/Users/Tobias/Desktop/Sublime Text Build 3126 x64/Data/Cache/Unity3D/UnityC#.tmLanguage.cache",
		"/C/Users/Tobias/Desktop/Sublime Text Build 3126 x64/Data/Packages/User/ApplySyntax.sublime-settings"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"vector3comparer",
			"print",
			"possibleMoves",
			"project_path:Library",
			"<path-to-Unity-folder>"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"F:\\\\Documents\\\\PrototypeFall2016\\\\Library",
			"F:\\\\Unity\\\\Editor\\\\Data"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "Assets/PlayerController.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 19512,
						"regions":
						{
						},
						"selection":
						[
							[
								14280,
								14280
							]
						],
						"settings":
						{
							"oops":
							{
								"10187,10188": "Empty object or collection initializer is redundant",
								"10465,10466": "Empty object or collection initializer is redundant",
								"1075,1076": "Parameter name differs in base method declaration",
								"12200,12214": "Comparison of floating point numbers can be unequal due to the differing precision of the two values.",
								"12819,12833": "Comparison of floating point numbers can be unequal due to the differing precision of the two values.",
								"13595,13605": "Parameter can be declared with base type",
								"13624,13636": "Parameter can be IDictionary",
								"1377,1381": "'this.' is redundant and can be removed safely.",
								"14552,14559": "Parameter can be ISet",
								"15370,15371": "Empty argument list is redundant",
								"15373,15374": "Empty object or collection initializer is redundant",
								"15966,15967": "Empty argument list is redundant",
								"15969,15970": "Empty object or collection initializer is redundant",
								"16549,16550": "Empty argument list is redundant",
								"16552,16553": "Empty object or collection initializer is redundant",
								"17134,17135": "Empty argument list is redundant",
								"17137,17138": "Empty object or collection initializer is redundant",
								"19195,19199": "Method 'Exit' has the same with 'Enter'",
								"19295,19297": "Convert to 'return' statement",
								"19473,19479": "Method 'Update' has the same with 'Exit'",
								"2174,2178": "'this.' is redundant and can be removed safely.",
								"241,251": "'TileMapObj' should start with a lower case letter. (Rule 'Fields')",
								"3495,3514": "Method 'ConvertToFloorUnits' can be made static.",
								"3575,3579": "Redundant 'else' keyword",
								"4351,4362": "The private field 'preparePath' is never assigned",
								"499,503": "The private field 'path' is never assigned",
								"542,557": "'playerMoveLimit' should start with an upper case letter. (Rule 'Constant Fields')",
								"5926,5927": "Assignment is redundant",
								"7397,7399": "Convert to 'return' statement",
								"8586,8596": "Static method invoked via derived type",
								"899,905": "Method 'Equals' hides method from outer class",
								"914,915": "Parameter name differs in base method declaration",
								"925,926": "Parameter name differs in base method declaration",
								"9647,9648": "Empty object or collection initializer is redundant",
								"9723,9724": "Empty argument list is redundant",
								"9997,9998": "Empty object or collection initializer is redundant"
							},
							"syntax": "Packages/Unity3D/UnityC#.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3857.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "Assets/PriorityQueue.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 950,
						"regions":
						{
						},
						"selection":
						[
							[
								118,
								125
							]
						],
						"settings":
						{
							"syntax": "Packages/Unity3D/UnityC#.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "Assets/Tile.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1908,
						"regions":
						{
						},
						"selection":
						[
							[
								1705,
								1705
							]
						],
						"settings":
						{
							"oops":
							{
								"0,5": "Using directive is not used by code and can be removed safely.",
								"101,106": "Using directive is not used by code and can be removed safely.",
								"1417,1419": "Convert to 'return' statement",
								"1474,1478": "Redundant 'else' keyword",
								"1594,1602": "Non-readonly field referenced in 'GetHashCode()'",
								"1603,1604": "Non-readonly field referenced in 'GetHashCode()'",
								"1637,1645": "Non-readonly field referenced in 'GetHashCode()'",
								"1646,1647": "Non-readonly field referenced in 'GetHashCode()'",
								"26,31": "Using directive is not used by code and can be removed safely.",
								"648,657": "'getCoords' should start with an upper case letter. (Rule 'Methods')",
								"726,733": "'getType' should start with an upper case letter. (Rule 'Methods')",
								"79,84": "Using directive is not used by code and can be removed safely.",
								"791,804": "'isTraversable' should start with an upper case letter. (Rule 'Methods')",
								"871,886": "'coordsToVector3' should start with an upper case letter. (Rule 'Methods')"
							},
							"syntax": "Packages/Unity3D/UnityC#.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "Assets/Obstacle.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 335,
						"regions":
						{
						},
						"selection":
						[
							[
								335,
								335
							]
						],
						"settings":
						{
							"oops":
							{
								"0,5": "Using directive is not used by code and can be removed safely.",
								"101,106": "Using directive is not used by code and can be removed safely.",
								"120,125": "Using directive is not used by code and can be removed safely.",
								"26,31": "Using directive is not used by code and can be removed safely.",
								"60,65": "Using directive is not used by code and can be removed safely.",
								"79,84": "Using directive is not used by code and can be removed safely."
							},
							"syntax": "Packages/Unity3D/UnityC#.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "Assets/FloorTile.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 303,
						"regions":
						{
						},
						"selection":
						[
							[
								134,
								134
							]
						],
						"settings":
						{
							"oops":
							{
								"0,5": "Using directive is not used by code and can be removed safely.",
								"101,106": "Using directive is not used by code and can be removed safely.",
								"120,125": "Using directive is not used by code and can be removed safely.",
								"26,31": "Using directive is not used by code and can be removed safely.",
								"60,65": "Using directive is not used by code and can be removed safely.",
								"79,84": "Using directive is not used by code and can be removed safely."
							},
							"syntax": "Packages/Unity3D/UnityC#.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "Assets/TileCoords.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 688,
						"regions":
						{
						},
						"selection":
						[
							[
								658,
								658
							]
						],
						"settings":
						{
							"oops":
							{
								"0,5": "Using directive is not used by code and can be removed safely.",
								"101,106": "Using directive is not used by code and can be removed safely.",
								"120,125": "Using directive is not used by code and can be removed safely.",
								"26,31": "Using directive is not used by code and can be removed safely.",
								"60,65": "Using directive is not used by code and can be removed safely.",
								"79,84": "Using directive is not used by code and can be removed safely."
							},
							"syntax": "Packages/Unity3D/UnityC#.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "Assets/SandTile.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 230,
						"regions":
						{
						},
						"selection":
						[
							[
								137,
								137
							]
						],
						"settings":
						{
							"oops":
							{
								"0,5": "Using directive is not used by code and can be removed safely.",
								"101,106": "Using directive is not used by code and can be removed safely.",
								"120,125": "Using directive is not used by code and can be removed safely.",
								"26,31": "Using directive is not used by code and can be removed safely.",
								"60,65": "Using directive is not used by code and can be removed safely.",
								"79,84": "Using directive is not used by code and can be removed safely."
							},
							"syntax": "Packages/Unity3D/UnityC#.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "Assets/TileMap.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3541,
						"regions":
						{
						},
						"selection":
						[
							[
								1186,
								1186
							]
						],
						"settings":
						{
							"oops":
							{
								"0,5": "Using directive is not used by code and can be removed safely.",
								"250,257": "Convert to readonly",
								"3085,3092": "'getTile' should start with an upper case letter. (Rule 'Methods')",
								"3122,3124": "Convert to 'return' statement",
								"3344,3351": "'getTile' should start with an upper case letter. (Rule 'Methods')"
							},
							"syntax": "Packages/Unity3D/UnityC#.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 1009.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 98.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.variable_get":
	{
		"height": 84.0
	},
	"pinned_build_system": "",
	"project": "gamecraft_fall_2016.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 119.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
